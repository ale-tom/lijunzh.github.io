<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Markdown on Lijun Zhu</title>
    <link>https://lijunzh.github.io/tags/markdown/index.xml</link>
    <description>Recent content in Markdown on Lijun Zhu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Lijun Zhu</copyright>
    <atom:link href="/tags/markdown/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Start A Personal Website using Hugo (with customized domain and GitHub free hosting)</title>
      <link>https://lijunzh.github.io/post/start-website-hugo/</link>
      <pubDate>Mon, 27 Mar 2017 11:14:35 -0400</pubDate>
      
      <guid>https://lijunzh.github.io/post/start-website-hugo/</guid>
      <description>

&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#building-site-using-hugo-with-academic-theme&#34;&gt;Building site with Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hosting-your-website-on-github-page&#34;&gt;Hosting static site on GitHub Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#acquire-a-custom-domain&#34;&gt;Acquire a custom domain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;

&lt;p&gt;Being a PhD student since 2014, I&amp;rsquo;ve always felt the urge to create a webpage that can demonstrate my work and ideas.
Overwhelmed by the course work and research loads (also partially due to my laziness), I&amp;rsquo;ve put off this work for almost two years.&lt;br /&gt;
It was not until I saw &lt;a href=&#34;https://twitter.com/karpathy&#34; target=&#34;_blank&#34;&gt;Andrej Karpathy&lt;/a&gt;&amp;rsquo;s work of the &lt;a href=&#34;http://cs231n.github.io/&#34; target=&#34;_blank&#34;&gt;CS231n course website&lt;/a&gt; when I was trying to pick up &lt;a href=&#34;http://cs231n.github.io/convolutional-networks/&#34; target=&#34;_blank&#34;&gt;Convolutional Neural Network (CNN)&lt;/a&gt; through a quick scan of Stanford&amp;rsquo;s course website.
In addition to the wonderful summary and explanation of CNN,  I also realized that two good News about creating website:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt; offers the free static site hosting through &lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34;&gt;GitHub Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34; target=&#34;_blank&#34;&gt;Markdown&lt;/a&gt; is a simple yet powerful tool to create structured content&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Being a huge fan of &lt;a href=&#34;https://git-scm.com/&#34; target=&#34;_blank&#34;&gt;git&lt;/a&gt;, I decided to try a GitHub Page website of my own.
After a few trials with GitHub Page and follow the example of &lt;a href=&#34;https://github.com/cs231n/cs231n.github.io&#34; target=&#34;_blank&#34;&gt;CS231n&amp;rsquo;s repo&lt;/a&gt;, I pause the project.
Even though GitHub Page gives you a great flexibility to configure your website freely, it is still too much work to set up the page template and get everything going.
I still see a large barrier that I saw when I was trying to create my website using HTML + CSS.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/w7Ft2ymGmfc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;p&gt;Just before I gave up the project and put off my website for maybe next year, I came across this great static site generator, &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt; that seems to enlighten the whole project.
Being standalone software written in &lt;a href=&#34;https://golang.org/&#34; target=&#34;_blank&#34;&gt;Go&lt;/a&gt;, it saves me from configuring and setting up all the complicated testing environment and help me dive into the site creating right away.
Not to mention that Hugo is &lt;a href=&#34;https://www.youtube.com/watch?v=CdiDYZ51a2o&#34; target=&#34;_blank&#34;&gt;super fasting&lt;/a&gt; in generating pages since it is written in a static typing language (Go).
Further more, the rich &lt;a href=&#34;http://themes.gohugo.io/&#34; target=&#34;_blank&#34;&gt;theme gallery&lt;/a&gt; offers a wide range of options to &lt;a href=&#34;https://www.youtube.com/watch?v=w7Ft2ymGmfc&#34; target=&#34;_blank&#34;&gt;create a website in two minutes&lt;/a&gt; with &lt;a href=&#34;http://getbootstrap.com/&#34; target=&#34;_blank&#34;&gt;bootstrap&lt;/a&gt; support.&lt;/p&gt;

&lt;h2 id=&#34;building-site-using-hugo-with-academic-theme&#34;&gt;Building site using Hugo with Academic theme&lt;/h2&gt;

&lt;p&gt;Following the &lt;a href=&#34;https://www.youtube.com/watch?v=w7Ft2ymGmfc&#34; target=&#34;_blank&#34;&gt;YouTube video&lt;/a&gt; before or this &lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34; target=&#34;_blank&#34;&gt;tutorial&lt;/a&gt;, it is easy to start building site with Hugo. Some useful commands are listed here for a glance (and my future reference):&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Commands&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ldquo;hugo&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Build your website&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ldquo;hugo -t &amp;lt;theme&amp;gt;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Build your website with &amp;lt;theme&amp;gt; downloaded in /theme directory&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ldquo;hugo version&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Check hugo version&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ldquo;hugo new site &amp;lt;sitename&amp;gt;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Build a new site under current directory&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ldquo;hugo new /post/blog_page.md&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Create a new post named &amp;ldquo;blog_page.md&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ldquo;hugo server -w&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Watch file system for changes and recreate as needed&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;A working example can be found in this &lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34; target=&#34;_blank&#34;&gt;quick tutorial&lt;/a&gt;, but here are important steps I took as milestones:&lt;/p&gt;

&lt;h3 id=&#34;create-an-empty-website&#34;&gt;Create an empty website:&lt;/h3&gt;

&lt;p&gt;Type the following command and you will get a site named &amp;ldquo;lijun&amp;rdquo; created by Hugo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new site lijun
tree -a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here are the results:

&lt;figure &gt;
    
        &lt;img src=&#34;https://lijunzh.github.io/img/post/create_site.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Resulting message from Hugo after &amp;#39;hugo new site&amp;#39;.&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lijunzh.github.io/img/post/tree_a.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Resulting file structure from Hugo after &amp;#39;hugo new site&amp;#39;&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Preview your template:
Use the &lt;code&gt;hugo server -w&lt;/code&gt; to preview the template under &amp;ldquo;localhost:1313&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;If you are creating a project site under some domain name such as &amp;ldquo;domain.com/project&amp;rdquo;, the site can be previewed under &amp;ldquo;localhost:1313/project&amp;rdquo;.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;When the site is first created, you should see nothing under &amp;ldquo;localhost:1313&amp;rdquo;.&lt;/p&gt;

&lt;h3 id=&#34;choose-a-theme&#34;&gt;Choose a theme:&lt;/h3&gt;

&lt;p&gt;We choose &lt;a href=&#34;http://themes.gohugo.io/academic/&#34; target=&#34;_blank&#34;&gt;Academic&lt;/a&gt; since we are trying to create a personal webpage for PhD students. You can choose whichever theme that fits your need.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/gcushen/hugo-academic.git themes/academic
cp -av themes/academic/exampleSite/* .
hugo server -w
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When open &amp;ldquo;localhost:1313&amp;rdquo; now in browser, here is what you will be seeing:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lijunzh.github.io/img/post/academic_template.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Screen capture of template site view.&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;h3 id=&#34;adding-contents&#34;&gt;Adding contents.&lt;/h3&gt;

&lt;p&gt;Now you can start the real work of creating website: adding content.
Markdown language is assumed in this framework and there is a &lt;a href=&#34;https://lijunzh.github.io/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;nice Markdown tutorial&lt;/a&gt; on Markdown syntax in the default post along with template.
To better organize your content, you can check out this &lt;a href=&#34;https://lijunzh.github.io/post/managing-content/&#34; target=&#34;_blank&#34;&gt;content managing tutorial&lt;/a&gt;.
After update the &amp;ldquo;/content&amp;rdquo; directory with your own information, here is what you can expect:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lijunzh.github.io/img/post/academic_lijun.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Screen capture of lijun&amp;#39;s site view.&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;h3 id=&#34;generate-local-site&#34;&gt;Generate local site&lt;/h3&gt;

&lt;p&gt;You can generate the HTML/CSS file locally under &amp;ldquo;/public&amp;rdquo; directory by the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo -t academic
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;The files generated in /public cannot be properly render by your local default. You can only preview it through &amp;ldquo;localhost:1313&amp;rdquo; after typing &lt;code&gt;hugo server -w&lt;/code&gt; in the terminal.&lt;/p&gt;

&lt;/div&gt;


&lt;h2 id=&#34;hosting-your-website-on-github-page&#34;&gt;Hosting your website on GitHub Page&lt;/h2&gt;

&lt;p&gt;GitHub generously offers &lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34;&gt;static page hosting&lt;/a&gt; without content size limit.
This is the ideal place to host academic personal website since there can be some cases that your personal files (e.g PDFs of your old papers) exceed the limit of free plan on other hosting service.&lt;/p&gt;

&lt;p&gt;There are multiple tutorial out there introducing the basic techniques of hosting website on GitHub Page. Here is a short list of what I referred to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hugo&amp;rsquo;s tutorial titleed &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Hosting on GitHub Page&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jonathan McGlone&amp;rsquo;s blog titled &lt;a href=&#34;http://jmcglone.com/guides/github-pages/&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Creating and Hosting a Personal Site on GitHub&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub Tutorial titled &lt;a href=&#34;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Using a custom domain with GitHub Pages&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34; target=&#34;_blank&#34;&gt;Hugo blog&lt;/a&gt; offers a nice short script that can be used to automatically deploy website. I included here for reference:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

# Build the project.
hugo # if using a theme, replace by `hugo -t &amp;lt;yourtheme&amp;gt;`

# Go To Public folder
cd public
# Add changes to git.
git add -A

# Commit changes.
msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master

# Come Back
cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;acquire-a-custom-domain&#34;&gt;Acquire a custom domain&lt;/h2&gt;

&lt;p&gt;Many people would prefer to have their personal website under a URL in the format of &amp;ldquo;FirstnameLastname.com&amp;rdquo; rather than &amp;ldquo;FirstnameLastname.github.io&amp;rdquo; which is the default URL for any GitHub page.
In that case, a custom domain is right for you.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;p&gt;Note that although GitHub Page does support &lt;a href=&#34;https://en.wikipedia.org/wiki/HTTPS&#34; target=&#34;_blank&#34;&gt;HTTPS&lt;/a&gt; by default now, it does &lt;a href=&#34;https://github.com/isaacs/github/issues/156&#34; target=&#34;_blank&#34;&gt;NOT support HTTPS on custom domain&lt;/a&gt;. A &lt;a href=&#34;https://blog.cloudflare.com/secure-and-fast-github-pages-with-cloudflare/&#34; target=&#34;_blank&#34;&gt;partial workaround&lt;/a&gt; is available through &lt;a href=&#34;https://www.cloudflare.com/&#34; target=&#34;_blank&#34;&gt;CloudFlare&lt;/a&gt;.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;If you are OK with the inconvenience about HTTPS, GitHub offers this &lt;a href=&#34;https://help.github.com/articles/quick-start-setting-up-a-custom-domain/&#34; target=&#34;_blank&#34;&gt;short tutorial&lt;/a&gt; to set the custom domain up.  For automatic redirection, check out this &lt;a href=&#34;https://help.github.com/articles/custom-domain-redirects-for-github-pages-sites/&#34; target=&#34;_blank&#34;&gt;table&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you do not have a custom domain already, there are multiple providers that offer cheap domain. I went with &lt;a href=&#34;https://domains.google/#/&#34; target=&#34;_blank&#34;&gt;Google Domains&lt;/a&gt; for its simplicity. You can certainly pick any of them such as &lt;a href=&#34;https://www.godaddy.com/&#34; target=&#34;_blank&#34;&gt;GoDaddy&lt;/a&gt; and &lt;a href=&#34;https://www.namecheap.com/&#34; target=&#34;_blank&#34;&gt;NameCheap&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;With the recent development of static site generator and GitHub Page, you can easily set up a personal site in a Sunday afternoon. The git-based deployment is very much in favor of my git-centric working flow.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing content with Markdown, LaTeX, and Shortcodes</title>
      <link>https://lijunzh.github.io/post/writing-markdown-latex/</link>
      <pubDate>Wed, 20 Apr 2016 10:00:00 +0000</pubDate>
      
      <guid>https://lijunzh.github.io/post/writing-markdown-latex/</guid>
      <description>&lt;p&gt;Content can be written using &lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34; target=&#34;_blank&#34;&gt;Markdown&lt;/a&gt;, &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX math&lt;/a&gt;, and &lt;a href=&#34;http://gohugo.io/extras/shortcodes/&#34; target=&#34;_blank&#34;&gt;Hugo Shortcodes&lt;/a&gt;. Additionally, HTML may be used for advanced formatting. This article gives an overview of the most common formatting options.&lt;/p&gt;

&lt;h2 id=&#34;sub-headings&#34;&gt;Sub-headings&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;## Heading 2
### Heading 3
#### Heading 4
##### Heading 5
###### Heading 6
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;emphasis&#34;&gt;Emphasis&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;Italics with *asterisks* or _underscores_.

Bold with **asterisks** or __underscores__.

Combined emphasis with **asterisks and _underscores_**.

Strikethrough with ~~two tildes~~.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ordered-lists&#34;&gt;Ordered lists&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;1. First item
2. Another item
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;unordered-lists&#34;&gt;Unordered lists&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;* First item
* Another item
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;images&#34;&gt;Images&lt;/h2&gt;

&lt;p&gt;Images may be added to a page by placing them in your &lt;code&gt;static/img/&lt;/code&gt; folder and referencing them using one of the following two notations:&lt;/p&gt;

&lt;p&gt;A general image:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;![alternative text for search engines](/img/screenshot.png)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A numbered figure with caption:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; figure src=&amp;quot;/img/screenshot.png&amp;quot; title=&amp;quot;Figure Caption&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[I&#39;m a link](https://www.google.com)
[A post]({{&amp;lt; ref &amp;quot;post/hi.md&amp;quot; &amp;gt;}})
[A publication]({{&amp;lt; ref &amp;quot;publication/hi.md&amp;quot; &amp;gt;}})
[A project]({{&amp;lt; ref &amp;quot;project/hi.md&amp;quot; &amp;gt;}})
[Another section]({{&amp;lt; relref &amp;quot;hi.md#who&amp;quot; &amp;gt;}})
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;emojis&#34;&gt;Emojis&lt;/h2&gt;

&lt;p&gt;See the &lt;a href=&#34;http://www.webpagefx.com/tools/emoji-cheat-sheet/&#34; target=&#34;_blank&#34;&gt;Emoji cheat sheet&lt;/a&gt; for available emoticons. The following serves as an example, but you should remove the spaces between each emoji name and pair of semicolons:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;I : heart : Academic : smile :
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I ❤️ Academic 😄&lt;/p&gt;

&lt;h2 id=&#34;blockquote&#34;&gt;Blockquote&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; This is a blockquote.
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a blockquote.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;footnotes&#34;&gt;Footnotes&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;I have more [^1] to say.

[^1]: Footnote example.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have more &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; to say.&lt;/p&gt;

&lt;h2 id=&#34;code-highlighting&#34;&gt;Code highlighting&lt;/h2&gt;

&lt;p&gt;Pass the &lt;em&gt;language&lt;/em&gt; of the code, such as &lt;code&gt;python&lt;/code&gt;, as a parameter after three backticks:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```python
# Example of code highlighting
input_string_var = input(&amp;quot;Enter some data: &amp;quot;)
print(&amp;quot;You entered: {}&amp;quot;.format(input_string_var))
```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Result:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Example of code highlighting
input_string_var = input(&amp;quot;Enter some data: &amp;quot;)
print(&amp;quot;You entered: {}&amp;quot;.format(input_string_var))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;highlighting-options&#34;&gt;Highlighting options&lt;/h3&gt;

&lt;p&gt;The Academic theme uses &lt;a href=&#34;https://highlightjs.org&#34; target=&#34;_blank&#34;&gt;highlight.js&lt;/a&gt; for source code highlighting, and highlighting is enabled by default for all pages. However, several configuration options are supported that allow finer-grained control over highlight.js.&lt;/p&gt;

&lt;p&gt;The following table lists the supported options for configuring highlight.js, along with their expected type and a short description. A &amp;ldquo;yes&amp;rdquo; in the &lt;strong&gt;config.toml&lt;/strong&gt; column means the value can be set globally in &lt;code&gt;config.toml&lt;/code&gt;, and a &amp;ldquo;yes&amp;rdquo; in the &lt;strong&gt;preamble&lt;/strong&gt; column means that the value can be set locally in a particular page&amp;rsquo;s preamble.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;option&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;config.toml&lt;/th&gt;
&lt;th&gt;preamble&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;highlight&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;enable/disable highlighting&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;highlight_languages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;slice&lt;/td&gt;
&lt;td&gt;choose additional languages&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;highlight_style&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;choose a highlighting style&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;highlight_version&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;choose the highlight.js version&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;option-highlight&#34;&gt;Option &lt;code&gt;highlight&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;highlight&lt;/code&gt; option allows enabling or disabling the inclusion of highlight.js, either globally or for a particular page. If the option is unset, it has the same effect as if you had specified &lt;code&gt;highlight = true&lt;/code&gt;. That is, the highlight.js javascript and css files will be included in every page. If you&amp;rsquo;d like to only include highlight.js files on pages that actually require source code highlighting, you can set &lt;code&gt;highlight = false&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;, and then override it by setting &lt;code&gt;highlight = true&lt;/code&gt; in the preamble of any pages that require source code highlighting. Conversely, you could enable highlighting globally, and disable it locally for pages that do not require it. Here is a table that shows whether highlighting will be enabled for a page, based on the values of &lt;code&gt;highlight&lt;/code&gt; set in &lt;code&gt;config.toml&lt;/code&gt; and/or the page&amp;rsquo;s preamble.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;config.toml&lt;/th&gt;
&lt;th&gt;page preamble&lt;/th&gt;
&lt;th&gt;highlighting enabled for page?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;unset or true&lt;/td&gt;
&lt;td&gt;unset or true&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;unset or true&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;unset or false&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;option-highlight-languages&#34;&gt;Option &lt;code&gt;highlight_languages&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;highlight_languages&lt;/code&gt; option allows you to specify additional languages that are supported by highlight.js, but are not considered &amp;ldquo;common&amp;rdquo; and therefore are not supported by default. For example, if you want source code highlighting for Go and clojure in all pages, set &lt;code&gt;highlight_languages = [&amp;quot;go&amp;quot;, &amp;quot;clojure&amp;quot;]&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;. If, on the other hand, you want to enable a language only for a specific page, you can set &lt;code&gt;highlight_languages&lt;/code&gt; in that page&amp;rsquo;s preamble.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;highlight_languages&lt;/code&gt; options specified in &lt;code&gt;config.toml&lt;/code&gt; and in a page&amp;rsquo;s preamble are additive. That is, if &lt;code&gt;config.toml&lt;/code&gt; contains, &lt;code&gt;highlight_languages = [&amp;quot;go&amp;quot;]&lt;/code&gt; and the page&amp;rsquo;s preamble contains &lt;code&gt;highlight_languages = [&amp;quot;ocaml&amp;quot;]&lt;/code&gt;, then javascript files for &lt;em&gt;both&lt;/em&gt; go and ocaml will be included for that page.&lt;/p&gt;

&lt;p&gt;If the &lt;code&gt;highlight_languages&lt;/code&gt; option is set, then the corresponding javascript files will be served from the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34;&gt;cdnjs server&lt;/a&gt;. To see a list of available languages, visit the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34;&gt;cdnjs page&lt;/a&gt; and search for links with the word &amp;ldquo;languages&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;highlight_languages&lt;/code&gt; option provides an easy and convenient way to include support for additional languages to be severed from a CDN. If serving unmodified files from cdnjs doesn&amp;rsquo;t meet your needs, you can include javascript files for additional language support via one of the methods described in the &lt;a href=&#34;https://lijunzh.github.io/post/getting-started/#third-party-and-local-scripts-js&#34; target=&#34;_blank&#34;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;option-highlight-style&#34;&gt;Option &lt;code&gt;highlight_style&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;highlight_style&lt;/code&gt; option allows you to select an alternate css style for highlighted code. For example, if you wanted to use the solarized-dark style, you could set &lt;code&gt;highlight_style = &amp;quot;solarized-dark&amp;quot;&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If the &lt;code&gt;highlight_style&lt;/code&gt; option is unset, the default is to use the file &lt;code&gt;/css/highlight.min.css&lt;/code&gt;, either the one provided by the Academic theme, or else the one in your local &lt;code&gt;static&lt;/code&gt; directory.  The &lt;code&gt;/css/highlight.min.css&lt;/code&gt; file provided by Academic is equivalent to the &lt;code&gt;github&lt;/code&gt; style from highlight.js.&lt;/p&gt;

&lt;p&gt;If the &lt;code&gt;highlight_style&lt;/code&gt; option &lt;em&gt;is&lt;/em&gt; set, then &lt;code&gt;/css/highlight.min.css&lt;/code&gt; is ignored, and the corresponding css file will be served from the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34;&gt;cdnjs server&lt;/a&gt;. To see a list of available styles, visit the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34;&gt;cdnjs page&lt;/a&gt; and search for links with the word &amp;ldquo;styles&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;See the &lt;a href=&#34;https://highlightjs.org/static/demo/&#34; target=&#34;_blank&#34;&gt;highlight.js demo page&lt;/a&gt; for examples of available styles.&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;Not all styles listed on the &lt;a href=&#34;https://highlightjs.org/static/demo/&#34; target=&#34;_blank&#34;&gt;highlight.js demo page&lt;/a&gt; are available from the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34;&gt;cdnjs server&lt;/a&gt;. If you want to use a style that is not served by cdnjs, just leave &lt;code&gt;highlight_style&lt;/code&gt; unset, and place the corresponding css file in &lt;code&gt;/static/css/highlight.min.css&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;If you don&amp;rsquo;t want to change the default style that ships with Academic but you do want the style file served from the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34;&gt;cdnjs server&lt;/a&gt;, set &lt;code&gt;highlight_style = &amp;quot;github&amp;quot;&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;highlight_style&lt;/code&gt; option is only recognized when set in &lt;code&gt;config.toml&lt;/code&gt;. Setting &lt;code&gt;highlight_style&lt;/code&gt; in your page&amp;rsquo;s preamble has no effect.&lt;/p&gt;

&lt;h4 id=&#34;option-highlight-version&#34;&gt;Option &lt;code&gt;highlight_version&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;highlight_version&lt;/code&gt; option, as the name implies, allows you to select the version of highlight.js you want to use. The default value is &amp;ldquo;9.9.0&amp;rdquo;. The &lt;code&gt;highlight_version&lt;/code&gt; option is only recognized when set in &lt;code&gt;config.toml&lt;/code&gt;. Setting &lt;code&gt;highlight_version&lt;/code&gt; in your page&amp;rsquo;s preamble has no effect.&lt;/p&gt;

&lt;h2 id=&#34;twitter-tweet&#34;&gt;Twitter tweet&lt;/h2&gt;

&lt;p&gt;To include a single tweet, pass the tweet’s ID from the tweet&amp;rsquo;s URL as parameter to the shortcode:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; tweet 666616452582129664 &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;youtube&#34;&gt;Youtube&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; youtube w7Ft2ymGmfc &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;vimeo&#34;&gt;Vimeo&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; vimeo 146022717 &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;github-gist&#34;&gt;GitHub gist&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; gist USERNAME GIST-ID  &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;speaker-deck&#34;&gt;Speaker Deck&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; speakerdeck 4e8126e72d853c0060001f97 &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;rm-latex-math&#34;&gt;$\rm \LaTeX$ math&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-TeX&#34;&gt;$$\left [ – \frac{\hbar^2}{2 m} \frac{\partial^2}{\partial x^2} + V \right ] \Psi = i \hbar \frac{\partial}{\partial t} \Psi$$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$$\left [ – \frac{\hbar^2}{2 m} \frac{\partial^2}{\partial x^2} + V \right ] \Psi = i \hbar \frac{\partial}{\partial t} \Psi$$&lt;/p&gt;

&lt;p&gt;Alternatively, inline math can be written by wrapping the formula with only a single &lt;code&gt;$&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This is inline: $\mathbf{y} = \mathbf{X}\boldsymbol\beta + \boldsymbol\varepsilon$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is inline: $\mathbf{y} = \mathbf{X}\boldsymbol\beta + \boldsymbol\varepsilon$&lt;/p&gt;

&lt;h2 id=&#34;table&#34;&gt;Table&lt;/h2&gt;

&lt;p&gt;Code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Markdown&#34;&gt;| Command           | Description                    |
| ------------------| ------------------------------ |
| `hugo`            | Build your website.            |
| `hugo serve -w`   | View your website.             |
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Result:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hugo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Build your website.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hugo serve -w&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;View your website.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;alerts&#34;&gt;Alerts&lt;/h2&gt;

&lt;p&gt;Alerts are a useful feature that add side content such as tips, notes, or warnings to your articles. They are especially handy when writing educational tutorial-style articles. Use the corresponding shortcodes to enable alerts inside your content:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{% alert note %}}
Here&#39;s a tip or note...
{{% /alert %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will display the following &lt;em&gt;note&lt;/em&gt; block:&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;Here&amp;rsquo;s a tip or note&amp;hellip;&lt;/p&gt;

&lt;/div&gt;


&lt;pre&gt;&lt;code&gt;{{% alert warning %}}
Here&#39;s some important information...
{{% /alert %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will display the following &lt;em&gt;warning&lt;/em&gt; block:&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;p&gt;Here&amp;rsquo;s some important information&amp;hellip;&lt;/p&gt;

&lt;/div&gt;

&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Footnote example.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
